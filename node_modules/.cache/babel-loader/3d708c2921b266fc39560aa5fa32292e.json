{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Town-Club\\\\React-Town-Front\\\\react-town\\\\src\\\\Routages\\\\PrivateAdminRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, Route, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport MasterAdmin from '../layouts/admin/MasterAdmin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateAdminRoute({ ...rest\n}) {\n  _s();\n\n  let history = useHistory();\n  const [loading, setLoading] = useState(true);\n  const [Authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    axios.get('/api/checking-authentication').then(res => {\n      if (res.status === 200) {\n        setAuthenticated(true);\n      }\n\n      setLoading(false);\n    });\n    return () => {\n      setAuthenticated(false);\n    };\n  }, []);\n  axios.interceptors.response.use(undefined, function axiosRetryInterceptor(err) {\n    if (err.response.status === 401) {\n      swal(\"Unauthorized\", err.response.data.message, \"warning\");\n      history.push('/TownClub/Home');\n    }\n\n    return Promise.reject(err);\n  });\n  axios.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    if (error.response.status === 403) {\n      swal(\"Forbiedden\", error.response.data.message, \"error\");\n      history.push('/TownClub/Home');\n    }\n\n    return Promise.reject(error);\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: '230px',\n        marginLeft: '600px',\n        color: 'grey'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      props,\n      location\n    }) => Authenticated ? /*#__PURE__*/_jsxDEV(MasterAdmin, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/Login',\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PrivateAdminRoute, \"wqyMVli4APSSQ6WYGu/4T4xPVdQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = PrivateAdminRoute;\nexport default PrivateAdminRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateAdminRoute\");","map":{"version":3,"sources":["C:/xampp/htdocs/Town-Club/React-Town-Front/react-town/src/Routages/PrivateAdminRoute.js"],"names":["React","useState","useEffect","Redirect","Route","useHistory","axios","swal","MasterAdmin","PrivateAdminRoute","rest","history","loading","setLoading","Authenticated","setAuthenticated","get","then","res","status","interceptors","response","use","undefined","axiosRetryInterceptor","err","data","message","push","Promise","reject","error","marginTop","marginLeft","color","props","location","pathname","state","from"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {Redirect,Route,useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport MasterAdmin from '../layouts/admin/MasterAdmin';\r\n\r\nfunction PrivateAdminRoute({...rest}){\r\n\r\n    let history = useHistory();\r\n\r\n    const [loading,setLoading] = useState(true);\r\n    const [Authenticated,setAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get('/api/checking-authentication').then(res => {\r\n\r\n            if(res.status === 200)\r\n            {\r\n                setAuthenticated(true);\r\n            }\r\n            setLoading(false);\r\n\r\n        });\r\n        return () => {\r\n            setAuthenticated(false);   \r\n        }\r\n    },[]);\r\n\r\n    axios.interceptors.response.use(undefined,function axiosRetryInterceptor(err){\r\n\r\n        if(err.response.status === 401)\r\n        {\r\n            swal(\"Unauthorized\",err.response.data.message,\"warning\")\r\n            history.push('/TownClub/Home');\r\n        }\r\n        return Promise.reject(err);\r\n    });\r\n\r\n    axios.interceptors.response.use(function (response){\r\n\r\n        return response;\r\n    },function (error){\r\n\r\n        if(error.response.status === 403)\r\n        {\r\n            swal(\"Forbiedden\",error.response.data.message,\"error\")\r\n            history.push('/TownClub/Home');\r\n        }\r\n        return Promise.reject(error);\r\n    });\r\n\r\n    if(loading)\r\n    {\r\n        return <h1 style={{marginTop:'230px',marginLeft:'600px',color:'grey'}}>Loading...</h1>\r\n    }\r\n\r\n    return(\r\n\r\n        <Route {...rest}\r\n        \r\n            render={({props,location}) => \r\n                Authenticated ? \r\n                <MasterAdmin {...props} /> : \r\n                <Redirect to={ {pathname:'/Login',state : {from:location}} } />\r\n\r\n            }\r\n\r\n        />\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default PrivateAdminRoute;"]},"metadata":{},"sourceType":"module"}